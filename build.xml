<?xml version="1.0" ?>
<project name="LWC" default="all">
	
	<!-- Name of the jar to create -->
	<property name="jar.core" value="LWC.jar" />
	<property name="jar.iconomy" value="LWC-iConomy.jar" />
	
	<property name="lib" value="lib" />
	<property name="src" value="src" />
	<property name="bin" value="bin" />
	
	<property name="modules" value="modules" />
	<property name="core" value="${modules}/core/src/" />
	<property name="worldguard" value="${modules}/worldguard/src/" />
	<property name="lists" value="${modules}/lists/src/" />
	<property name="iconomy" value="${modules}/iconomy/src/" />
	
	<property name="build" value="build" />
	
	<!-- Location of the plugins folder development server -->
	<property name="dev" value="../../minecraft/plugins" />
	
	<!-- Libraries used by LWC & modules -->
	<fileset dir="${lib}" id="libs">
		<include name="CraftBukkit.jar" />
		<include name="Permissions.jar" />
		<include name="WorldGuard.jar" />
		<include name="WorldEdit.jar" />
		<include name="Lists.jar" />
		<include name="iConomy.jar" />
		<include name="mcbans.jar" />
		<include name="junit.jar" />
	</fileset>
	
	<!-- JUnit testing -->
	<property name="test.classname" value="com.griefcraft.LWCTestSuite" />
	<path id="test.classpath">
		<pathelement location="${bin}/core/" />
		<pathelement location="${bin}/iconomy/" />
		<pathelement location="${bin}/test/" />
		<fileset refid="libs" />
	</path>
	
	<target name="all" depends="clean,compile,build,lwc,iconomy,test" description="Main target" />
	
	<target name="clean">
		<!-- Delete the previous folders -->
		<delete dir="${bin}/core/" />
		<delete dir="${bin}/iconomy/" />
		<delete dir="${bin}/test/" />
		
		<!-- create some folders -->
		<mkdir dir="${bin}/core/" />
		<mkdir dir="${bin}/iconomy/" />
		<mkdir dir="${bin}/test/" />
	</target>
	
	<target name="compile" description="Compilation">
		
		<echo>${label}</echo>
		<javac srcdir="${src}/main/java/;${core};${worldguard}/main/java/;${lists}/main/java/" destdir="${bin}/core/" debuglevel="lines,vars,source" deprecation="true" includeantruntime="true">
			<classpath>
				<fileset refid="libs" />
			</classpath>
		</javac>
		
		<echo>Compiling LWC-iConomy</echo>
		<javac srcdir="${iconomy}/main/java/" destdir="${bin}/iconomy/" deprecation="true" debuglevel="lines,vars,source" includeantruntime="true">
			<classpath>
				<fileset refid="libs" />
				<dirset dir="${bin}/core/" />
			</classpath>
		</javac>
		
		<echo>Compiling LWC Unit Tests</echo>
		<javac srcdir="${src}/test/main/java/" destdir="${bin}/test/" deprecation="true" debuglevel="lines,vars,source" includeantruntime="true">
			<classpath>
				<fileset refid="libs" />
				<dirset dir="${bin}/core/" />
				<dirset dir="${bin}/iconomy/" />
			</classpath>
		</javac>
	</target>
  
	<target name="build" description="Build the distribution files">
		<delete dir="${build}" />
		<mkdir dir="${build}" />
		<mkdir dir="${build}/junit" />

		<copy tofile="${build}/VERSION" file="VERSION" overwrite="yes" />
	</target>
	
	<target name="lwc" description="Build LWC.jar">
		<echo>Building LWC.jar</echo>
	
		<jar jarfile="${build}/${jar.core}">
			<fileset dir="${src}" includes="lang/*" />
			<fileset dir="${src}/resources/" includes="plugin.yml" />
			<fileset dir="${bin}/core/" />
			
			<manifest>
				<attribute name="Class-Path" value="LWC/modules/core.jar" />
			</manifest>
		</jar>
	</target>
	
	<target name="iconomy" description="Build LWC-iConomy.jar">
		<echo>Building LWC-iConomy.jar</echo>
		
		<jar jarfile="${build}/${jar.iconomy}">
			<fileset dir="${iconomy}/resources/" includes="plugin.yml" />
			<fileset dir="${bin}/iconomy/" />
		</jar>
	</target>
	
	<target name="test">
		<mkdir dir="${build}/test-reports/" />
		
		<junit fork="yes" haltonfailure="yes">
			<batchtest fork="yes" todir="${build}/test-reports/">
				<fileset dir="${bin}/test/">
				        <include name="**/*Test.class" />
				</fileset>
			</batchtest>
			
		    <formatter type="xml" />
			<classpath refid="test.classpath" />
		</junit>
	</target>
</project>